openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/project/:
    get:
      operationId: listProjectLists
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProjectList'
          description: ''
      tags:
      - api
    post:
      operationId: createProjectList
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectList'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
          description: ''
      tags:
      - api
  /api/project/{id}/:
    get:
      operationId: retrieveProjectDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetail'
          description: ''
      tags:
      - api
    put:
      operationId: updateProjectList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProjectList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProjectList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/issue/:
    get:
      operationId: listIssueLists
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/IssueList'
          description: ''
      tags:
      - api
    post:
      operationId: createIssueList
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IssueList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IssueList'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueList'
          description: ''
      tags:
      - api
  /api/issue/{id}/:
    get:
      operationId: retrieveIssueDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueDetail'
          description: ''
      tags:
      - api
    put:
      operationId: updateIssueList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IssueList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IssueList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueList'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateIssueList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IssueList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IssueList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueList'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyIssueList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/comment/:
    get:
      operationId: listCommentLists
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommentList'
          description: ''
      tags:
      - api
    post:
      operationId: createCommentList
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommentList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommentList'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentList'
          description: ''
      tags:
      - api
  /api/comment/{id}/:
    get:
      operationId: retrieveCommentDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDetail'
          description: ''
      tags:
      - api
    put:
      operationId: updateCommentList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommentList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommentList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentList'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCommentList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommentList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommentList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentList'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCommentList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/token/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
  /api/project/{id}/add_contributor/:
    post:
      operationId: addContributorContributorDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContributorDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContributorDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContributorDetail'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContributorDetail'
          description: ''
      tags:
      - api
  /api/project/{id}/add_issue/:
    post:
      operationId: addIssueIssueDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IssueDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IssueDetail'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueDetail'
          description: ''
      tags:
      - api
  /api/issue/{id}/add_comment/:
    post:
      operationId: addCommentCommentDetail
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommentDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommentDetail'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDetail'
          description: ''
      tags:
      - api
components:
  schemas:
    ProjectList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 128
        author:
          type: string
          readOnly: true
        type:
          enum:
          - BACKEND
          - FRONTEND
          - SMARTPHONE
          type: string
      required:
      - title
      - type
    ProjectDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 128
        description:
          type: string
          maxLength: 2048
        author:
          type: string
          readOnly: true
        type:
          enum:
          - BACKEND
          - FRONTEND
          - SMARTPHONE
          type: string
        contribute_by:
          type: string
          readOnly: true
        issues:
          type: string
          readOnly: true
      required:
      - title
      - type
    IssueList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 128
        author:
          type: integer
          nullable: true
        tag:
          enum:
          - BUG
          - IMPROVEMENT
          - TASK
          type: string
        priority:
          enum:
          - LOW
          - MEDIUM
          - HIGH
          type: string
        status:
          enum:
          - TODO
          - INPROGESS
          - FINISHED
          type: string
      required:
      - title
      - tag
      - priority
      - status
    IssueDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 128
        description:
          type: string
          maxLength: 2048
        tag:
          enum:
          - BUG
          - IMPROVEMENT
          - TASK
          type: string
        priority:
          enum:
          - LOW
          - MEDIUM
          - HIGH
          type: string
        status:
          enum:
          - TODO
          - INPROGESS
          - FINISHED
          type: string
        project:
          type: string
          readOnly: true
        created_time:
          type: string
          format: date-time
          readOnly: true
        author:
          type: string
          readOnly: true
        assignee:
          type: integer
          nullable: true
        comments:
          type: string
          readOnly: true
      required:
      - title
      - tag
      - priority
      - status
    CommentList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        issue:
          type: string
          readOnly: true
        description:
          type: string
          maxLength: 2048
        author:
          type: string
          readOnly: true
        created_time:
          type: string
          format: date-time
          readOnly: true
    CommentDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          maxLength: 2048
        issue:
          type: string
          readOnly: true
        author:
          type: string
          readOnly: true
        created_time:
          type: string
          format: date-time
          readOnly: true
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    ContributorDetail:
      type: object
      properties:
        project:
          type: string
          readOnly: true
        user:
          type: integer
        permission:
          type: boolean
      required:
      - user
      - permission
